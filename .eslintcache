[{"/Users/alexgordon/Desktop/reside/src/index.js":"1","/Users/alexgordon/Desktop/reside/src/App.js":"2","/Users/alexgordon/Desktop/reside/src/reportWebVitals.js":"3","/Users/alexgordon/Desktop/reside/src/redux/store.js":"4","/Users/alexgordon/Desktop/reside/src/header/Header.js":"5","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js":"6","/Users/alexgordon/Desktop/reside/src/pages/MainPage.js":"7","/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js":"8","/Users/alexgordon/Desktop/reside/src/firebase/firebase.js":"9","/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js":"10","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js":"11","/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js":"12","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js":"13","/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js":"14","/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js":"15","/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js":"16","/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js":"17","/Users/alexgordon/Desktop/reside/src/pages/about/About.js":"18","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js":"19","/Users/alexgordon/Desktop/reside/src/components/display/Display.js":"20","/Users/alexgordon/Desktop/reside/src/components/map/Map.js":"21","/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js":"22","/Users/alexgordon/Desktop/reside/src/sidebar/Search.js":"23","/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js":"24","/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js":"25","/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js":"26","/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js":"27","/Users/alexgordon/Desktop/reside/src/components/map/mapStyles.js":"28","/Users/alexgordon/Desktop/reside/src/components/map/mapSearch.js":"29","/Users/alexgordon/Desktop/reside/src/components/formdialog/FormProperty.js":"30","/Users/alexgordon/Desktop/reside/src/components/card/Card.js":"31"},{"size":480,"mtime":1611215434626,"results":"32","hashOfConfig":"33"},{"size":2161,"mtime":1612549215000,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1607334058358,"results":"35","hashOfConfig":"33"},{"size":377,"mtime":1607334058357,"results":"36","hashOfConfig":"33"},{"size":2923,"mtime":1612635941954,"results":"37","hashOfConfig":"33"},{"size":825,"mtime":1611216661695,"results":"38","hashOfConfig":"33"},{"size":2675,"mtime":1611780104000,"results":"39","hashOfConfig":"33"},{"size":852,"mtime":1607334058357,"results":"40","hashOfConfig":"33"},{"size":2983,"mtime":1611072430966,"results":"41","hashOfConfig":"33"},{"size":144,"mtime":1607334058357,"results":"42","hashOfConfig":"33"},{"size":2334,"mtime":1611006650373,"results":"43","hashOfConfig":"33"},{"size":234,"mtime":1607334058357,"results":"44","hashOfConfig":"33"},{"size":2755,"mtime":1611006717672,"results":"45","hashOfConfig":"33"},{"size":1875,"mtime":1611347919350,"results":"46","hashOfConfig":"33"},{"size":1083,"mtime":1612204468000,"results":"47","hashOfConfig":"33"},{"size":2664,"mtime":1609751708368,"results":"48","hashOfConfig":"33"},{"size":1452,"mtime":1611347266774,"results":"49","hashOfConfig":"33"},{"size":2478,"mtime":1611004494168,"results":"50","hashOfConfig":"33"},{"size":4996,"mtime":1612637170000,"results":"51","hashOfConfig":"33"},{"size":3002,"mtime":1610730008071,"results":"52","hashOfConfig":"33"},{"size":2540,"mtime":1612613081000,"results":"53","hashOfConfig":"33"},{"size":236,"mtime":1611003013717,"results":"54","hashOfConfig":"33"},{"size":799,"mtime":1612637699443,"results":"55","hashOfConfig":"33"},{"size":395,"mtime":1612637262192,"results":"56","hashOfConfig":"33"},{"size":7717,"mtime":1612204533000,"results":"57","hashOfConfig":"33"},{"size":3099,"mtime":1612637101130,"results":"58","hashOfConfig":"33"},{"size":2618,"mtime":1609521558045,"results":"59","hashOfConfig":"33"},{"size":5512,"mtime":1611696421899,"results":"60","hashOfConfig":"33"},{"size":1972,"mtime":1612302045755,"results":"61","hashOfConfig":"33"},{"size":5753,"mtime":1612210684491,"results":"62","hashOfConfig":"33"},{"size":1646,"mtime":1612631264668,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"1rgjmf5",{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"66"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"66"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"66"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"66"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alexgordon/Desktop/reside/src/index.js",[],["135","136"],"/Users/alexgordon/Desktop/reside/src/App.js",["137"],"/Users/alexgordon/Desktop/reside/src/reportWebVitals.js",[],"/Users/alexgordon/Desktop/reside/src/redux/store.js",["138"],"import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './root-reducer';\nimport logger from 'redux-logger';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst middlewares = []\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);;\n}\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;","/Users/alexgordon/Desktop/reside/src/header/Header.js",["139"],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js",[],"/Users/alexgordon/Desktop/reside/src/pages/MainPage.js",["140"],"/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js",[],"/Users/alexgordon/Desktop/reside/src/firebase/firebase.js",[],"/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js",[],"/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js",[],"/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js",["141"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebase\";\nimport { IconButton, Button, makeStyles } from \"@material-ui/core\";\nimport \"./frontdisplay.css\";\nconst FrontDisplay = ({ history }) => {\n  const useStyles = makeStyles(() => ({\n    buttonSignOut: {\n      marginTop: \"20px\",\n      fontFamily: \"sans-serif\",\n      borderColor: \"#028c6a\",\n      color: \"white\",\n      backgroundColor: \"#028c6a\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        color: \"#028c6a\",\n        backgroundColor: \"#FFF\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <div className=\"span\">\n      <span>\n        Welcome to Reside! A free and new platform to help you manage your\n        customers and properties.\n        <br />\n        Add events to your Google-Calendar with few simple clicks.\n        <br />\n        To explore the demo, register, or use our test user: <br />\n        User: <strong>bradpitt@gmail.com</strong>\n        <br />\n        Password: <strong>123456</strong>\n      </span>\n      <div\n        className={`menu-item`}\n        onClick={() => {\n          auth.signInWithEmailAndPassword(\"bradpitt@gmail.com\", \"123456\");\n        }}\n      >\n        <div>\n          <Button variant=\"outlined\" className={classes.buttonSignOut}>\n            DEMO SIGN IN\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FrontDisplay);\n","/Users/alexgordon/Desktop/reside/src/pages/about/About.js",["142","143","144","145"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 50,\n  },\n  media: {\n    margin: \"0px auto\",\n    width: \"100%\",\n    height: 320,\n    position: \"relative\",\n    zIndex: 1000,\n    borderBottom: \"10px solid var(--app-color)\",\n  },\n  footer: {\n    textAlign: \"center\",\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Card className={classes.root} align=\"center\">\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          src=\"https://avatars3.githubusercontent.com/u/62938794?s=460&u=3aae313e7026179f2649783c6deeebe6675136f6&v=4\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Alexander Gordon\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Full-Stack Developer with big passion to learn new tools and\n            technology!\n            <p>React.js, Node.js, Next.js, FireBase, Python</p>\n          </Typography>\n        </CardContent>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <CardActions className={classes.footer}>\n            <a\n              href=\"https://www.linkedin.com/in/alexgordontlv/\"\n              target=\"_blank\"\n            >\n              <LinkedInIcon />\n            </a>\n            <a href=\"https://www.github.com/alexgordontlv/\" target=\"_blank\">\n              <GitHubIcon />\n            </a>\n          </CardActions>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default About;\n","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js",["146"],"/Users/alexgordon/Desktop/reside/src/components/display/Display.js",["147"],"import React, { useState, useEffect } from \"react\";\nimport { DataGrid, RowsProp, ColDef } from \"@material-ui/data-grid\";\nimport \"./display.css\";\nimport FormDialog from \"../formdialog/FormDialog\";\nimport { connect } from \"react-redux\";\nimport TimePicker from \"../timepicker/TimePicker\";\nimport { SnackbarProvider } from \"notistack\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Display({ dataToShow, currentUser, searchValue }) {\n  const [state, setState] = React.useState(null);\n  const [index, setIndex] = React.useState(null);\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [dataToShow]);\n\n  let name,\n    budget,\n    phone = null;\n  if (dataToShow === \"customers\") {\n    name = \"Name\";\n    budget = \"Budget\";\n    phone = \"Phone Number\";\n  } else {\n    name = \"Address\";\n    budget = \"Price\";\n    phone = \"Contact\";\n  }\n\n  const rows: RowsProp = currentUser\n    ? dataToShow === \"customers\"\n      ? currentUser.customers.filter((customer) =>\n          customer.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : currentUser.properties.filter((property) =>\n          property.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n    : [];\n\n  const columns: ColDef[] = [\n    { field: \"name\", headerName: `${name}`, width: 120 },\n    { field: \"budget\", headerName: `${budget}`, width: 120 },\n    { field: \"phone\", headerName: `${phone}`, width: 130 },\n    { field: \"rooms\", headerName: \"Rooms\", width: 80 },\n    { field: \"floor\", headerName: \"Floor\", width: 70 },\n    { field: \"elevator\", headerName: \"Elevator\", width: 80 },\n    { field: \"parking\", headerName: \"Parking\", width: 70 },\n  ];\n\n  const handleRowClick = (event) => {\n    setIndex(event.rowIndex);\n    setState(rows[event.rowIndex]);\n  };\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <div className=\"display\">\n        <div className=\"icon\">\n          <FormDialog dataToShow={dataToShow} rowData={null} />\n\n          <div className=\"container\">\n            {state ? (\n              <FormDialog\n                dataToShow={dataToShow}\n                rowData={state}\n                rowIndex={index}\n                className=\"button\"\n              />\n            ) : null}\n            {state ? <TimePicker rowData={state} className=\"button\" /> : null}\n          </div>\n        </div>\n        <div style={{ height: 500, width: \"100%\" }}>\n          {rows.length || !currentUser ? (\n            <DataGrid\n              rows={rows}\n              columns={columns}\n              onRowClick={(params) => handleRowClick(params)}\n              disableMultipleSelection={true}\n            />\n          ) : (\n            <div className=\"proggress_container\">\n              <CircularProgress className=\"proggress\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </SnackbarProvider>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps)(Display);\n","/Users/alexgordon/Desktop/reside/src/components/map/Map.js",["148","149","150","151","152"],"/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Search.js",["153"],"/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js",[],"/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js",["154","155","156"],"import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { IconButton } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport './formdialog.css';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Box, makeStyles } from '@material-ui/core';\n\nimport {\n  addCustomer,\n  addProperty,\n  updateData\n} from '../../redux/user/user.actions';\nimport {\n  addDataToFireStore,\n  updateDataFromFireBase\n} from '../../firebase/firebase';\nimport { useSnackbar } from 'notistack';\n\nfunction FormDialog({ dataToShow, rowData, rowIndex }) {\n  const useStyles = makeStyles(() => ({\n    button: {\n      borderColor: '#028c6a',\n      color: '#028c6a',\n      backgroundColor: 'white',\n      '&:hover': {\n        color: 'white',\n        backgroundColor: '028c6a'\n      }\n    },\n    buttonSignIn: {\n      borderColor: '#028c6a',\n      color: '#028c6a'\n    }\n  }));\n  const classes = useStyles();\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const dispatch = useDispatch();\n  let name,\n    budget,\n    phone,\n    dataName = null;\n  if (dataToShow === 'customers') {\n    dataName = 'Customer';\n    name = 'Name';\n    budget = 'Budget';\n    phone = 'Phone Number';\n  } else {\n    dataName = 'Property';\n    name = 'Address';\n    budget = 'Price';\n    phone = 'Contact';\n  }\n  let INITIAL_STATE = {\n    id: '',\n    name: '',\n    budget: '',\n    phone: '',\n    rooms: '',\n    floor: '',\n    elevator: false,\n    parking: false\n  };\n  const [state, setState] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  useEffect(() => {\n    setState(rowData ? { ...rowData } : INITIAL_STATE);\n    return function cleanup() {\n      setState('');\n    };\n  }, [rowData]);\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n  const handleCecked = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    console.log(rowIndex);\n    updateDataFromFireBase(currentUser, state, dataToShow);\n    dispatch(updateData(rowIndex, dataToShow, state));\n\n    enqueueSnackbar(`${state.name} was succesfully updated`);\n    setOpen(false);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (currentUser) {\n      addDataToFireStore(currentUser, state, dataToShow).then((data) => {\n        data.onSnapshot((snapShot) => {\n          if (dataToShow === 'customers') {\n            dispatch(addCustomer(snapShot.data()));\n          } else {\n            dispatch(addProperty(snapShot.data()));\n          }\n          enqueueSnackbar(\n            `${state.name} was succesfully added to the database`,\n            'success'\n          );\n          setState(INITIAL_STATE);\n        });\n      });\n    }\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box width=\"100%\">\n      <div>\n        {!rowData ? (\n          <Box\n            display=\"flex\"\n            height={80}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Button\n              variant=\"outlined\"\n              className={classes.button}\n              onClick={handleClickOpen}\n              textAlign=\"center\"\n              justify=\"center\"\n            >\n              <AddIcon fontSize=\"large\" />{' '}\n              {`Add ${dataToShow === 'customers' ? 'Customer' : 'Property'}`}\n            </Button>\n          </Box>\n        ) : (\n          <EditIcon onClick={handleClickOpen} style={{ color: 'black' }} />\n        )}\n\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {rowData ? 'Update' : 'Add'} {`${dataName}`}\n          </DialogTitle>\n          <DialogContent>\n            <div className=\"container\">\n              <div className=\"left\">\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  name=\"name\"\n                  label={name}\n                  type=\"text\"\n                  value={state.name}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"budget\"\n                  label={budget}\n                  type=\"text\"\n                  value={state.budget}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"rooms\"\n                  label=\"Rooms\"\n                  type=\"number\"\n                  value={state.rooms}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n              </div>\n              <div className=\"right\">\n                <TextField\n                  margin=\"dense\"\n                  name=\"phone\"\n                  label={phone}\n                  type=\"text\"\n                  value={state.phone}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"floor\"\n                  label=\"Floor\"\n                  type=\"number\"\n                  value={state.floor}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.elevator}\n                      onChange={handleCecked}\n                      name=\"elevator\"\n                    />\n                  }\n                  label=\"Elevator\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.parking}\n                      onChange={handleCecked}\n                      name=\"parking\"\n                    />\n                  }\n                  label=\"Parking\"\n                />\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} variant=\"outlined\" className=\"button\">\n              Cancel\n            </Button>\n            {rowData ? (\n              <div className=\"actions\">\n                <Button\n                  onClick={handleUpdate}\n                  variant=\"outlined\"\n                  className=\"button\"\n                >\n                  Update {`${dataName}`}\n                </Button>\n              </div>\n            ) : (\n              <Button\n                onClick={handleSubmit}\n                variant=\"outlined\"\n                className=\"button\"\n              >\n                Add {`${dataName}`}\n              </Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Box>\n  );\n}\n\nexport default FormDialog;\n","/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js",["157"],"/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js",["158"],"\n  let gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  let CLIENT_ID = process.env.REACT_APP_CLIENT_ID\n  let API_KEY = process.env.REACT_APP_CALENDAR_API_KEY\n  let DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  let SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n \n\n\n  export const addCalendarEvent = (startTime,address,clientName) => {\n  \n    gapi.load('client:auth2', () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3')\n      let timeString = startTime;\n      let timeZone = \"Asia/Jerusalem\";\n      let duration = '00:30:00';\n    \n      let startDate = new Date(timeString);\n      let msDuration = (Number(duration.split(':')[0]) * 60 * 60 + Number(duration.split(':')[1]) * 60  + Number(duration.split(':')[2])) * 1000;\n      let endDate = new Date(startDate.getTime() + msDuration);\n      let isoStartDate = new Date(startDate.getTime()-new Date().getTimezoneOffset()*60*1000).toISOString().split(\".\")[0];\n      let isoEndDate = new Date(endDate.getTime()-(new Date().getTimezoneOffset())*60*1000).toISOString().split(\".\")[0];\n\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        console.log(isoStartDate)\n        console.log(isoEndDate)\n        let event = {\n          'summary': clientName,\n          'location': address,\n          'start': {\n            'dateTime': isoStartDate,\n            'timeZone': timeZone\n          },\n          'end': {\n            'dateTime': isoEndDate,\n            'timeZone': timeZone\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=1'\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'popup', 'minutes': 20}\n            ]\n          }\n        }\n         gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          //console.log('EVENTS: ', events)\n        })\n        \n        \n        let request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n      })\n    })\n  }\n\n  \n","/Users/alexgordon/Desktop/reside/src/components/map/mapStyles.js",["159"],"export default [\n  {\n    featureType: \"all\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative\",\n    elementType: \"labels.text.fill\",\n    stylers: [\n      {\n        color: \"#444444\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.province\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.locality\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.neighborhood\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"administrative.land_parcel\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#f2f2f2\",\n      },\n    ],\n  },\n  {\n    featureType: \"landscape.man_made\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n      {\n        color: \"#cee9de\",\n      },\n      {\n        saturation: \"2\",\n      },\n      {\n        weight: \"0.80\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.attraction\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"poi.park\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"road\",\n    elementType: \"all\",\n    stylers: [\n      {\n        saturation: -100,\n      },\n      {\n        lightness: 45,\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        color: \"#f5d6d6\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        hue: \"#ff0000\",\n      },\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.highway.controlled_access\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        hue: \"#0064ff\",\n      },\n      {\n        gamma: \"1.44\",\n      },\n      {\n        lightness: \"-3\",\n      },\n      {\n        weight: \"1.69\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.arterial\",\n    elementType: \"labels.icon\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"road.local\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n      {\n        weight: \"0.31\",\n      },\n      {\n        gamma: \"1.43\",\n      },\n      {\n        lightness: \"-5\",\n      },\n      {\n        saturation: \"-22\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"off\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.line\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        hue: \"#ff0000\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station.airport\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n      {\n        hue: \"#ff0045\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station.bus\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"on\",\n      },\n      {\n        hue: \"#00d1ff\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station.bus\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station.rail\",\n    elementType: \"all\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n      {\n        hue: \"#00cbff\",\n      },\n    ],\n  },\n  {\n    featureType: \"transit.station.rail\",\n    elementType: \"labels.text\",\n    stylers: [\n      {\n        visibility: \"simplified\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"all\",\n    stylers: [\n      {\n        color: \"#46bcec\",\n      },\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n  {\n    featureType: \"water\",\n    elementType: \"geometry.fill\",\n    stylers: [\n      {\n        weight: \"1.61\",\n      },\n      {\n        color: \"#cde2e5\",\n      },\n      {\n        visibility: \"on\",\n      },\n    ],\n  },\n];\n","/Users/alexgordon/Desktop/reside/src/components/map/mapSearch.js",[],"/Users/alexgordon/Desktop/reside/src/components/formdialog/FormProperty.js",["160","161","162","163","164","165"],"import React, { useEffect, useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport './formdialog.css';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useSelector, useDispatch } from 'react-redux';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { Box, makeStyles } from '@material-ui/core';\n\nimport { addProperty, updateData } from '../../redux/user/user.actions';\nimport {\n  addDataToFireStore,\n  updateDataFromFireBase\n} from '../../firebase/firebase';\nimport { useSnackbar } from 'notistack';\n\nfunction FormDialog({ openNow, setopenNow, propsToPass }) {\n  const useStyles = makeStyles(() => ({\n    button: {\n      borderColor: '#028c6a',\n      color: '#028c6a',\n      backgroundColor: 'white',\n      '&:hover': {\n        color: 'white',\n        backgroundColor: '028c6a'\n      }\n    },\n    buttonSignIn: {\n      borderColor: '#028c6a',\n      color: '#028c6a'\n    }\n  }));\n  const classes = useStyles();\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const [state, setState] = React.useState({\n    id: '',\n    name: '',\n    budget: '',\n    phone: '',\n    rooms: '',\n    floor: '',\n    elevator: false,\n    parking: false,\n    lat: '',\n    lng: ''\n  });\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const { address, lat, lng } = propsToPass;\n    setState({ ...state, name: address, lat: lat, lng: lng });\n    return () => {\n      setState('');\n    };\n  }, [openNow]);\n\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n  const handleCecked = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (currentUser) {\n      console.log(state);\n      addDataToFireStore(currentUser, state, 'properties').then((data) => {\n        data.onSnapshot((snapShot) => {\n          dispatch(addProperty(snapShot.data()));\n          enqueueSnackbar(\n            `${state.name} was succesfully added to the database`,\n            'success'\n          );\n        });\n      });\n    }\n    setopenNow(false);\n  };\n\n  const handleClose = () => {\n    setopenNow(false);\n  };\n\n  return (\n    <Box width=\"100%\">\n      <div>\n        <Dialog\n          open={openNow}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\"></DialogTitle>\n          <DialogContent>\n            <div className=\"container\">\n              <div className=\"left\">\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  name=\"name\"\n                  label=\"Address\"\n                  type=\"text\"\n                  value={state.name}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"budget\"\n                  label=\"Price\"\n                  type=\"text\"\n                  value={state.budget}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"rooms\"\n                  label=\"Rooms\"\n                  type=\"number\"\n                  value={state.rooms}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n              </div>\n              <div className=\"right\">\n                <TextField\n                  margin=\"dense\"\n                  name=\"phone\"\n                  label=\"Contact\"\n                  type=\"text\"\n                  value={state.phone}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"floor\"\n                  label=\"Floor\"\n                  type=\"number\"\n                  value={state.floor}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.elevator}\n                      onChange={handleCecked}\n                      name=\"elevator\"\n                    />\n                  }\n                  label=\"Elevator\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.parking}\n                      onChange={handleCecked}\n                      name=\"parking\"\n                    />\n                  }\n                  label=\"Parking\"\n                />\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} variant=\"outlined\" className=\"button\">\n              Cancel\n            </Button>\n            <Button\n              onClick={handleSubmit}\n              variant=\"outlined\"\n              className=\"button\"\n            >\n              Add {`Property`}\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Box>\n  );\n}\n\nexport default FormDialog;\n","/Users/alexgordon/Desktop/reside/src/components/card/Card.js",["166","167","168","169","170","171"],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":46,"column":6,"nodeType":"178","endLine":46,"endColumn":8,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":1,"column":22,"nodeType":"182","messageId":"183","endLine":1,"endColumn":37},{"ruleId":"180","severity":1,"message":"184","line":4,"column":22,"nodeType":"182","messageId":"183","endLine":4,"endColumn":28},{"ruleId":"180","severity":1,"message":"185","line":3,"column":8,"nodeType":"182","messageId":"183","endLine":3,"endColumn":15},{"ruleId":"180","severity":1,"message":"186","line":4,"column":10,"nodeType":"182","messageId":"183","endLine":4,"endColumn":20},{"ruleId":"180","severity":1,"message":"187","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":22},{"ruleId":"180","severity":1,"message":"184","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":68,"column":13,"nodeType":"190","endLine":71,"endColumn":14},{"ruleId":"188","severity":1,"message":"189","line":74,"column":13,"nodeType":"190","endLine":74,"endColumn":77},{"ruleId":"180","severity":1,"message":"191","line":25,"column":10,"nodeType":"182","messageId":"183","endLine":25,"endColumn":15},{"ruleId":"180","severity":1,"message":"192","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":25},{"ruleId":"180","severity":1,"message":"193","line":2,"column":8,"nodeType":"182","messageId":"183","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"194","line":12,"column":23,"nodeType":"182","messageId":"183","endLine":12,"endColumn":34},{"ruleId":"180","severity":1,"message":"186","line":13,"column":10,"nodeType":"182","messageId":"183","endLine":13,"endColumn":20},{"ruleId":"180","severity":1,"message":"184","line":13,"column":22,"nodeType":"182","messageId":"183","endLine":13,"endColumn":28},{"ruleId":"180","severity":1,"message":"195","line":13,"column":30,"nodeType":"182","messageId":"183","endLine":13,"endColumn":40},{"ruleId":"180","severity":1,"message":"196","line":1,"column":17,"nodeType":"182","messageId":"183","endLine":1,"endColumn":26},{"ruleId":"180","severity":1,"message":"192","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"186","line":8,"column":10,"nodeType":"182","messageId":"183","endLine":8,"endColumn":20},{"ruleId":"176","severity":1,"message":"197","line":80,"column":6,"nodeType":"178","endLine":80,"endColumn":15,"suggestions":"198"},{"ruleId":"180","severity":1,"message":"192","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"199","line":69,"column":17,"nodeType":"182","messageId":"183","endLine":69,"endColumn":23},{"ruleId":"200","severity":1,"message":"201","line":1,"column":1,"nodeType":"202","endLine":362,"endColumn":3},{"ruleId":"180","severity":1,"message":"192","line":1,"column":28,"nodeType":"182","messageId":"183","endLine":1,"endColumn":36},{"ruleId":"180","severity":1,"message":"203","line":12,"column":8,"nodeType":"182","messageId":"183","endLine":12,"endColumn":16},{"ruleId":"180","severity":1,"message":"204","line":15,"column":23,"nodeType":"182","messageId":"183","endLine":15,"endColumn":33},{"ruleId":"180","severity":1,"message":"205","line":18,"column":3,"nodeType":"182","messageId":"183","endLine":18,"endColumn":25},{"ruleId":"180","severity":1,"message":"206","line":38,"column":9,"nodeType":"182","messageId":"183","endLine":38,"endColumn":16},{"ruleId":"176","severity":1,"message":"207","line":60,"column":6,"nodeType":"178","endLine":60,"endColumn":15,"suggestions":"208"},{"ruleId":"180","severity":1,"message":"187","line":4,"column":8,"nodeType":"182","messageId":"183","endLine":4,"endColumn":22},{"ruleId":"180","severity":1,"message":"209","line":5,"column":8,"nodeType":"182","messageId":"183","endLine":5,"endColumn":19},{"ruleId":"180","severity":1,"message":"210","line":7,"column":8,"nodeType":"182","messageId":"183","endLine":7,"endColumn":17},{"ruleId":"180","severity":1,"message":"184","line":8,"column":8,"nodeType":"182","messageId":"183","endLine":8,"endColumn":14},{"ruleId":"180","severity":1,"message":"211","line":11,"column":8,"nodeType":"182","messageId":"183","endLine":11,"endColumn":20},{"ruleId":"180","severity":1,"message":"212","line":12,"column":8,"nodeType":"182","messageId":"183","endLine":12,"endColumn":18},"no-native-reassign",["213"],"no-negated-in-lhs",["214"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["215"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Display' is defined but never used.","'IconButton' is defined but never used.","'CardActionArea' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'state' is assigned a value but never used.","'useState' is defined but never used.","'RoomIcon' is defined but never used.","'useDispatch' is defined but never used.","'makeStyles' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'INITIAL_STATE'. Either include it or remove the dependency array.",["216"],"'events' is assigned a value but never used.","import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","'EditIcon' is defined but never used.","'updateData' is defined but never used.","'updateDataFromFireBase' is defined but never used.","'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'propsToPass' and 'state'. Either include them or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["217"],"'CardActions' is defined but never used.","'CardMedia' is defined but never used.","'LinkedInIcon' is defined but never used.","'GitHubIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},"Update the dependencies array to be: [dispatch]",{"range":"224","text":"225"},"Update the dependencies array to be: [INITIAL_STATE, rowData]",{"range":"226","text":"227"},"Update the dependencies array to be: [openNow, propsToPass, state]",{"range":"228","text":"229"},[1587,1589],"[dispatch]",[2245,2254],"[INITIAL_STATE, rowData]",[1785,1794],"[openNow, propsToPass, state]"]