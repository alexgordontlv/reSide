[{"/Users/alexgordon/Desktop/reside/src/index.js":"1","/Users/alexgordon/Desktop/reside/src/App.js":"2","/Users/alexgordon/Desktop/reside/src/reportWebVitals.js":"3","/Users/alexgordon/Desktop/reside/src/redux/store.js":"4","/Users/alexgordon/Desktop/reside/src/header/Header.js":"5","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js":"6","/Users/alexgordon/Desktop/reside/src/pages/MainPage.js":"7","/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js":"8","/Users/alexgordon/Desktop/reside/src/firebase/firebase.js":"9","/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js":"10","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js":"11","/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js":"12","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js":"13","/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js":"14","/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js":"15","/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js":"16","/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js":"17","/Users/alexgordon/Desktop/reside/src/pages/about/About.js":"18","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js":"19","/Users/alexgordon/Desktop/reside/src/components/display/Display.js":"20","/Users/alexgordon/Desktop/reside/src/components/map/Map.js":"21","/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js":"22","/Users/alexgordon/Desktop/reside/src/sidebar/Search.js":"23","/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js":"24","/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js":"25","/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js":"26","/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js":"27"},{"size":480,"mtime":1611215434626,"results":"28","hashOfConfig":"29"},{"size":2021,"mtime":1611215434624,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607334058358,"results":"31","hashOfConfig":"29"},{"size":377,"mtime":1607334058357,"results":"32","hashOfConfig":"29"},{"size":2765,"mtime":1611006151894,"results":"33","hashOfConfig":"29"},{"size":825,"mtime":1611216661695,"results":"34","hashOfConfig":"29"},{"size":2303,"mtime":1611347126399,"results":"35","hashOfConfig":"29"},{"size":852,"mtime":1607334058357,"results":"36","hashOfConfig":"29"},{"size":2983,"mtime":1611072430966,"results":"37","hashOfConfig":"29"},{"size":144,"mtime":1607334058357,"results":"38","hashOfConfig":"29"},{"size":2334,"mtime":1611006650373,"results":"39","hashOfConfig":"29"},{"size":234,"mtime":1607334058357,"results":"40","hashOfConfig":"29"},{"size":2755,"mtime":1611006717672,"results":"41","hashOfConfig":"29"},{"size":1875,"mtime":1611347919350,"results":"42","hashOfConfig":"29"},{"size":1146,"mtime":1611343116031,"results":"43","hashOfConfig":"29"},{"size":2664,"mtime":1609751708368,"results":"44","hashOfConfig":"29"},{"size":1452,"mtime":1611347266774,"results":"45","hashOfConfig":"29"},{"size":2478,"mtime":1611004494168,"results":"46","hashOfConfig":"29"},{"size":4344,"mtime":1611342345436,"results":"47","hashOfConfig":"29"},{"size":3002,"mtime":1610730008071,"results":"48","hashOfConfig":"29"},{"size":1916,"mtime":1611258982789,"results":"49","hashOfConfig":"29"},{"size":236,"mtime":1611003013717,"results":"50","hashOfConfig":"29"},{"size":693,"mtime":1607334058358,"results":"51","hashOfConfig":"29"},{"size":701,"mtime":1611342479329,"results":"52","hashOfConfig":"29"},{"size":7764,"mtime":1611347252519,"results":"53","hashOfConfig":"29"},{"size":3063,"mtime":1611009583531,"results":"54","hashOfConfig":"29"},{"size":2618,"mtime":1609521558045,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rgjmf5",{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"86"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"86"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"86"},"/Users/alexgordon/Desktop/reside/src/index.js",[],"/Users/alexgordon/Desktop/reside/src/App.js",["116"],"/Users/alexgordon/Desktop/reside/src/reportWebVitals.js",[],"/Users/alexgordon/Desktop/reside/src/redux/store.js",["117"],"/Users/alexgordon/Desktop/reside/src/header/Header.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js",[],"/Users/alexgordon/Desktop/reside/src/pages/MainPage.js",["118"],"/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js",[],"/Users/alexgordon/Desktop/reside/src/firebase/firebase.js",[],"/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js",[],["119","120"],"/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js",[],"/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js",["121"],"/Users/alexgordon/Desktop/reside/src/pages/about/About.js",["122","123","124","125"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 50,\n  },\n  media: {\n    margin: \"0px auto\",\n    width: \"100%\",\n    height: 320,\n    position: \"relative\",\n    zIndex: 1000,\n    borderBottom: \"10px solid var(--app-color)\",\n  },\n  footer: {\n    textAlign: \"center\",\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Card className={classes.root} align=\"center\">\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          src=\"https://avatars3.githubusercontent.com/u/62938794?s=460&u=3aae313e7026179f2649783c6deeebe6675136f6&v=4\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Alexander Gordon\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Full-Stack Developer with big passion to learn new tools and\n            technology!\n            <p>React.js, Node.js, Next.js, FireBase, Python</p>\n          </Typography>\n        </CardContent>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <CardActions className={classes.footer}>\n            <a\n              href=\"https://www.linkedin.com/in/alexgordontlv/\"\n              target=\"_blank\"\n            >\n              <LinkedInIcon />\n            </a>\n            <a href=\"https://www.github.com/alexgordontlv/\" target=\"_blank\">\n              <GitHubIcon />\n            </a>\n          </CardActions>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default About;\n","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js",["126"],"import React, { useEffect } from \"react\";\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Slide,\n  Grid,\n} from \"@material-ui/core\";\nimport FormDialog from \"../formdialog/FormDialog\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Delete } from \"@material-ui/icons\";\nimport TimePicker from \"../timepicker/TimePicker\";\nimport useStyles from \"./listStyles\";\nimport { GiElevator } from \"react-icons/gi\";\nimport { AiFillCar } from \"react-icons/ai\";\nimport { deleteDataFromFireBase } from \"../../firebase/firebase\";\nimport { deleteData } from \"../../redux/user/user.actions\";\nimport { useSnackbar } from \"notistack\";\n\nfunction Display2({ dataToShow, searchValue }) {\n  const [state, setState] = React.useState(null);\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [dataToShow]);\n\n  const handleDelete = (rowData, rowIndex) => {\n    deleteDataFromFireBase(currentUser, rowData.id, dataToShow);\n    dispatch(deleteData(rowIndex, dataToShow));\n    enqueueSnackbar(`${rowData.name} was succesfully deleted!`);\n  };\n\n  const dataRows = currentUser\n    ? dataToShow === \"customers\"\n      ? currentUser.customers.filter((customer) =>\n          customer.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : currentUser.properties.filter((property) =>\n          property.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n    : [];\n\n  return (\n    <div>\n      <MUIList\n        dense={false}\n        style={{ maxWidth: \"100%\" }}\n        width=\"100%\"\n        className={classes.list}\n      >\n        {dataRows.map((row, index) => (\n          <Slide direction=\"down\" in mountOnEnter unmountOnExit key={row.id}>\n            <ListItem\n              alignItems=\"center\"\n              className={row.parking ? classes.rowRed : classes.rowGreen}\n            >\n              <ListItemAvatar>\n                <div>\n                  {row.elevator && <GiElevator className={classes.icon} />}\n                  {row.parking && <AiFillCar className={classes.icon} />}\n                </div>\n              </ListItemAvatar>\n              <Grid\n                className={classes.grid}\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Name\" : \"Address\"}\n                    secondary={\n                      row.name.length > 12\n                        ? row.name.slice(0, 10) + \"...\"\n                        : row.name\n                    }\n                  />\n                </Grid>\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Phone\" : \"Contact\"}\n                    secondary={row.phone || \"- - - - - -\"}\n                  />\n                </Grid>\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Budget\" : \"Price\"}\n                    secondary={row.budget}\n                  />\n                </Grid>\n              </Grid>\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <TimePicker rowData={row} />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <FormDialog\n                    dataToShow={dataToShow}\n                    rowData={row}\n                    rowIndex={index}\n                    style={{ alignItems: \"center\" }}\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <Delete\n                    onClick={() => {\n                      handleDelete(row, index);\n                    }}\n                    style={{ color: \"black\" }}\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </Slide>\n        ))}\n      </MUIList>\n    </div>\n  );\n}\n\nexport default Display2;\n","/Users/alexgordon/Desktop/reside/src/components/display/Display.js",["127"],"import React, { useState, useEffect } from \"react\";\nimport { DataGrid, RowsProp, ColDef } from \"@material-ui/data-grid\";\nimport \"./display.css\";\nimport FormDialog from \"../formdialog/FormDialog\";\nimport { connect } from \"react-redux\";\nimport TimePicker from \"../timepicker/TimePicker\";\nimport { SnackbarProvider } from \"notistack\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Display({ dataToShow, currentUser, searchValue }) {\n  const [state, setState] = React.useState(null);\n  const [index, setIndex] = React.useState(null);\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [dataToShow]);\n\n  let name,\n    budget,\n    phone = null;\n  if (dataToShow === \"customers\") {\n    name = \"Name\";\n    budget = \"Budget\";\n    phone = \"Phone Number\";\n  } else {\n    name = \"Address\";\n    budget = \"Price\";\n    phone = \"Contact\";\n  }\n\n  const rows: RowsProp = currentUser\n    ? dataToShow === \"customers\"\n      ? currentUser.customers.filter((customer) =>\n          customer.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : currentUser.properties.filter((property) =>\n          property.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n    : [];\n\n  const columns: ColDef[] = [\n    { field: \"name\", headerName: `${name}`, width: 120 },\n    { field: \"budget\", headerName: `${budget}`, width: 120 },\n    { field: \"phone\", headerName: `${phone}`, width: 130 },\n    { field: \"rooms\", headerName: \"Rooms\", width: 80 },\n    { field: \"floor\", headerName: \"Floor\", width: 70 },\n    { field: \"elevator\", headerName: \"Elevator\", width: 80 },\n    { field: \"parking\", headerName: \"Parking\", width: 70 },\n  ];\n\n  const handleRowClick = (event) => {\n    setIndex(event.rowIndex);\n    setState(rows[event.rowIndex]);\n  };\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <div className=\"display\">\n        <div className=\"icon\">\n          <FormDialog dataToShow={dataToShow} rowData={null} />\n\n          <div className=\"container\">\n            {state ? (\n              <FormDialog\n                dataToShow={dataToShow}\n                rowData={state}\n                rowIndex={index}\n                className=\"button\"\n              />\n            ) : null}\n            {state ? <TimePicker rowData={state} className=\"button\" /> : null}\n          </div>\n        </div>\n        <div style={{ height: 500, width: \"100%\" }}>\n          {rows.length || !currentUser ? (\n            <DataGrid\n              rows={rows}\n              columns={columns}\n              onRowClick={(params) => handleRowClick(params)}\n              disableMultipleSelection={true}\n            />\n          ) : (\n            <div className=\"proggress_container\">\n              <CircularProgress className=\"proggress\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </SnackbarProvider>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps)(Display);\n","/Users/alexgordon/Desktop/reside/src/components/map/Map.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Search.js",[],"/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js",[],"/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js",["128","129","130","131","132"],"/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js",["133"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { addCalendarEvent } from \"../calendar/Calendar\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nfunction TimePicker({ rowData }) {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n      },\n    })\n  );\n  const classes = useStyles();\n  const [state, setState] = React.useState(new Date());\n  const [address, setAddress] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [rowData]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(state);\n    addCalendarEvent(state, address, rowData.name);\n    setState(\"\");\n    setAddress(\"\");\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <EventIcon style={{ color: \"black\" }} onClick={handleClickOpen} />\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Add Event To {rowData ? rowData.name : \"Customer\"}\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"container\">\n            <form className={classes.container} noValidate>\n              <TextField\n                id=\"datetime-local\"\n                label=\"Next appointment\"\n                type=\"datetime-local\"\n                value={state}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(event) => {\n                  setState(event.target.value);\n                }}\n              />\n            </form>\n          </div>\n          <TextField\n            margin=\"dense\"\n            name=\"address\"\n            label=\"Where?\"\n            type=\"text\"\n            value={address}\n            onChange={(event) => {\n              setAddress(event.target.value);\n            }}\n            fullWidth\n            className=\"field\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} variant=\"outlined\">\n            Add Event\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default TimePicker;\n","/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js",["134"],"\n  let gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  let CLIENT_ID = process.env.REACT_APP_CLIENT_ID\n  let API_KEY = process.env.REACT_APP_CALENDAR_API_KEY\n  let DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  let SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n \n\n\n  export const addCalendarEvent = (startTime,address,clientName) => {\n  \n    gapi.load('client:auth2', () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3')\n      let timeString = startTime;\n      let timeZone = \"Asia/Jerusalem\";\n      let duration = '00:30:00';\n    \n      let startDate = new Date(timeString);\n      let msDuration = (Number(duration.split(':')[0]) * 60 * 60 + Number(duration.split(':')[1]) * 60  + Number(duration.split(':')[2])) * 1000;\n      let endDate = new Date(startDate.getTime() + msDuration);\n      let isoStartDate = new Date(startDate.getTime()-new Date().getTimezoneOffset()*60*1000).toISOString().split(\".\")[0];\n      let isoEndDate = new Date(endDate.getTime()-(new Date().getTimezoneOffset())*60*1000).toISOString().split(\".\")[0];\n\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        console.log(isoStartDate)\n        console.log(isoEndDate)\n        let event = {\n          'summary': clientName,\n          'location': address,\n          'start': {\n            'dateTime': isoStartDate,\n            'timeZone': timeZone\n          },\n          'end': {\n            'dateTime': isoEndDate,\n            'timeZone': timeZone\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=1'\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'popup', 'minutes': 20}\n            ]\n          }\n        }\n         gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          //console.log('EVENTS: ', events)\n        })\n        \n        \n        let request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n      })\n    })\n  }\n\n  \n",{"ruleId":"135","severity":1,"message":"136","line":45,"column":6,"nodeType":"137","endLine":45,"endColumn":8,"suggestions":"138"},{"ruleId":"139","severity":1,"message":"140","line":1,"column":22,"nodeType":"141","messageId":"142","endLine":1,"endColumn":37},{"ruleId":"139","severity":1,"message":"143","line":3,"column":8,"nodeType":"141","messageId":"142","endLine":3,"endColumn":15},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","replacedBy":"147"},{"ruleId":"139","severity":1,"message":"148","line":4,"column":10,"nodeType":"141","messageId":"142","endLine":4,"endColumn":20},{"ruleId":"139","severity":1,"message":"149","line":4,"column":8,"nodeType":"141","messageId":"142","endLine":4,"endColumn":22},{"ruleId":"139","severity":1,"message":"150","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":68,"column":13,"nodeType":"153","endLine":71,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":74,"column":13,"nodeType":"153","endLine":74,"endColumn":77},{"ruleId":"139","severity":1,"message":"154","line":24,"column":10,"nodeType":"141","messageId":"142","endLine":24,"endColumn":15},{"ruleId":"139","severity":1,"message":"155","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"155","line":1,"column":28,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"148","line":8,"column":10,"nodeType":"141","messageId":"142","endLine":8,"endColumn":20},{"ruleId":"139","severity":1,"message":"156","line":20,"column":3,"nodeType":"141","messageId":"142","endLine":20,"endColumn":13},{"ruleId":"139","severity":1,"message":"157","line":25,"column":3,"nodeType":"141","messageId":"142","endLine":25,"endColumn":25},{"ruleId":"135","severity":1,"message":"158","line":82,"column":6,"nodeType":"137","endLine":82,"endColumn":15,"suggestions":"159"},{"ruleId":"139","severity":1,"message":"155","line":1,"column":28,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"139","severity":1,"message":"160","line":69,"column":17,"nodeType":"141","messageId":"142","endLine":69,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["161"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'Display' is defined but never used.","no-native-reassign",["162"],"no-negated-in-lhs",["163"],"'IconButton' is defined but never used.","'CardActionArea' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'state' is assigned a value but never used.","'useState' is defined but never used.","'deleteData' is defined but never used.","'deleteDataFromFireBase' is defined but never used.","React Hook useEffect has a missing dependency: 'INITIAL_STATE'. Either include it or remove the dependency array.",["164"],"'events' is assigned a value but never used.",{"desc":"165","fix":"166"},"no-global-assign","no-unsafe-negation",{"desc":"167","fix":"168"},"Update the dependencies array to be: [dispatch]",{"range":"169","text":"170"},"Update the dependencies array to be: [INITIAL_STATE, rowData]",{"range":"171","text":"172"},[1554,1556],"[dispatch]",[2292,2301],"[INITIAL_STATE, rowData]"]