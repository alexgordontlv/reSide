[{"/Users/alexgordon/Desktop/reside/src/index.js":"1","/Users/alexgordon/Desktop/reside/src/App.js":"2","/Users/alexgordon/Desktop/reside/src/reportWebVitals.js":"3","/Users/alexgordon/Desktop/reside/src/redux/store.js":"4","/Users/alexgordon/Desktop/reside/src/header/Header.js":"5","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js":"6","/Users/alexgordon/Desktop/reside/src/pages/MainPage.js":"7","/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js":"8","/Users/alexgordon/Desktop/reside/src/firebase/firebase.js":"9","/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js":"10","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js":"11","/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js":"12","/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js":"13","/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js":"14","/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js":"15","/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js":"16","/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js":"17","/Users/alexgordon/Desktop/reside/src/pages/about/About.js":"18","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js":"19","/Users/alexgordon/Desktop/reside/src/components/display/Display.js":"20","/Users/alexgordon/Desktop/reside/src/components/map/Map.js":"21","/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js":"22","/Users/alexgordon/Desktop/reside/src/sidebar/Search.js":"23","/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js":"24","/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js":"25","/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js":"26","/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js":"27"},{"size":480,"mtime":1611215434626,"results":"28","hashOfConfig":"29"},{"size":2021,"mtime":1611215434624,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":1607334058358,"results":"31","hashOfConfig":"29"},{"size":377,"mtime":1607334058357,"results":"32","hashOfConfig":"29"},{"size":2765,"mtime":1611006151894,"results":"33","hashOfConfig":"29"},{"size":825,"mtime":1611216661695,"results":"34","hashOfConfig":"29"},{"size":2435,"mtime":1611525027414,"results":"35","hashOfConfig":"29"},{"size":852,"mtime":1607334058357,"results":"36","hashOfConfig":"29"},{"size":2983,"mtime":1611072430966,"results":"37","hashOfConfig":"29"},{"size":144,"mtime":1607334058357,"results":"38","hashOfConfig":"29"},{"size":2334,"mtime":1611006650373,"results":"39","hashOfConfig":"29"},{"size":234,"mtime":1607334058357,"results":"40","hashOfConfig":"29"},{"size":2755,"mtime":1611006717672,"results":"41","hashOfConfig":"29"},{"size":1875,"mtime":1611347919350,"results":"42","hashOfConfig":"29"},{"size":1146,"mtime":1611343116031,"results":"43","hashOfConfig":"29"},{"size":2664,"mtime":1609751708368,"results":"44","hashOfConfig":"29"},{"size":1452,"mtime":1611347266774,"results":"45","hashOfConfig":"29"},{"size":2478,"mtime":1611004494168,"results":"46","hashOfConfig":"29"},{"size":4473,"mtime":1611524654207,"results":"47","hashOfConfig":"29"},{"size":3002,"mtime":1610730008071,"results":"48","hashOfConfig":"29"},{"size":947,"mtime":1611611582600,"results":"49","hashOfConfig":"29"},{"size":236,"mtime":1611003013717,"results":"50","hashOfConfig":"29"},{"size":693,"mtime":1607334058358,"results":"51","hashOfConfig":"29"},{"size":701,"mtime":1611342479329,"results":"52","hashOfConfig":"29"},{"size":7764,"mtime":1611347252519,"results":"53","hashOfConfig":"29"},{"size":3063,"mtime":1611009583531,"results":"54","hashOfConfig":"29"},{"size":2618,"mtime":1609521558045,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1rgjmf5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},"/Users/alexgordon/Desktop/reside/src/index.js",[],["121","122"],"/Users/alexgordon/Desktop/reside/src/App.js",["123"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport Header from \"./header/Header\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport MainPage from \"./pages/MainPage\";\nimport SignInAndSignOut from \"./pages/signin&signout/SignInAndSignOut\";\nimport {\n  auth,\n  createUserProfileDocument,\n  getDataFromFireStore,\n} from \"./firebase/firebase\";\nimport {useSelector, useDispatch  } from \"react-redux\";\nimport {setUser, addCustomer, addProperty } from \"./redux/user/user.actions\";\n\nconst App = () => {\n  const currentUser = useSelector(state => state.user.currentUser);\n  const dispatch = useDispatch()\n  useEffect(() => {\n    auth.onAuthStateChanged(async (userAuth) => {\n      if (userAuth) {\n        const userRef = await createUserProfileDocument(userAuth);\n        await userRef.onSnapshot(async (snapShot) => {\n          dispatch(setUser({\n            photoURL: userAuth.photoURL,\n            id: snapShot.id,\n            ...snapShot.data(),\n            customers: [],\n            properties: [],\n          }));\n        });\n        const customers = await getDataFromFireStore(userAuth, \"customers\");\n        if (!customers.empty) {\n          customers.docs.map((doc) => dispatch(addCustomer(doc.data())));\n        }\n        const properties = await getDataFromFireStore(userAuth, \"properties\");\n        if (!properties.empty) {\n          properties.docs.map((doc) => dispatch(addProperty(doc.data())));\n        }\n      } else {\n        dispatch(setUser(null));\n      }\n    });\n    return function cleanup() {\n    };\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"header\">\n        <Header />\n      </div>\n      <div className=\"main\">\n        <Switch>\n          <Route\n            exact\n            path=\"/signin\"\n            render={() =>\n              currentUser ? <Redirect to=\"/customers\" /> : <SignInAndSignOut />\n            }\n          />\n          <Route path=\"/\" component={MainPage} />\n        </Switch>\n      </div>\n    </div>\n  );\n};\nexport default App;\n","/Users/alexgordon/Desktop/reside/src/reportWebVitals.js",[],"/Users/alexgordon/Desktop/reside/src/redux/store.js",["124"],"import {createStore, applyMiddleware} from 'redux';\nimport rootReducer from './root-reducer';\nimport logger from 'redux-logger';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nconst middlewares = []\nif(process.env.NODE_ENV==='development'){\n    middlewares.push(logger);;\n}\nconst store = createStore(rootReducer, composeWithDevTools());\n\nexport default store;","/Users/alexgordon/Desktop/reside/src/header/Header.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignInAndSignOut.js",[],"/Users/alexgordon/Desktop/reside/src/pages/MainPage.js",["125"],"import React, { useState } from \"react\";\nimport SideBar from \"../sidebar/Sidebar\";\nimport Display from \"../components/display/Display\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Display2 from \"../components/display/Display2\";\nimport \"./mainpage.css\";\nimport FrontDisplay from \"./frontdisplay/FrontDisplay\";\nimport About from \"./about/About\";\nimport { useSelector } from \"react-redux\";\nimport Contact from \"./contact/Contact\";\nimport { SnackbarProvider } from \"notistack\";\nimport Map from \"../components/map/Map\";\nimport dataLogo from \"../datalogo2.svg\";\n\nconst MainPage = ({ match }) => {\n  const [state, setState] = useState(\"\");\n  const currentUser = useSelector((state) => state.user.currentUser);\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <div>\n        {currentUser ? (\n          <div className=\"map_div\">\n            <Map />\n          </div>\n        ) : (\n          <div></div>\n        )}\n\n        <div className=\"mainbody\">\n          {currentUser ? (\n            <div className=\"sidebar_component\">\n              <SideBar onChange={(value) => setState(value)} />\n            </div>\n          ) : (\n            <img src={dataLogo} className=\"logo\" alt=\"Logo\" />\n          )}\n\n          <div className=\"main_page_body\">\n            <Switch>\n              <Route\n                exact\n                path={`${match.path}`}\n                render={(props) =>\n                  !currentUser ? (\n                    <FrontDisplay />\n                  ) : (\n                    <Display2 dataToShow={\"customers\"} searchValue={state} />\n                  )\n                }\n              />\n              <Route\n                exact\n                path={`/customers`}\n                render={(props) => (\n                  <Display2 dataToShow={\"customers\"} searchValue={state} />\n                )}\n              />\n              <Route\n                exact\n                path={`/properties`}\n                render={(props) => (\n                  <Display2 dataToShow={\"properties\"} searchValue={state} />\n                )}\n              />\n              <Route exact path={`/contact`} render={(props) => <Contact />} />\n              <Route exact path={`/about`} render={(props) => <About />} />\n              <Route exact path={`/calendar`} render={(props) => <About />} />\n            </Switch>\n          </div>\n        </div>\n      </div>\n    </SnackbarProvider>\n  );\n};\n\nexport default MainPage;\n","/Users/alexgordon/Desktop/reside/src/redux/user/user.actions.js",[],"/Users/alexgordon/Desktop/reside/src/firebase/firebase.js",[],"/Users/alexgordon/Desktop/reside/src/redux/root-reducer.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/SignIn.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.types.js",[],"/Users/alexgordon/Desktop/reside/src/pages/signin&signout/Register.js",[],"/Users/alexgordon/Desktop/reside/src/redux/user/user.reducer.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Sidebar.js",[],"/Users/alexgordon/Desktop/reside/src/pages/contact/Contact.js",[],"/Users/alexgordon/Desktop/reside/src/pages/frontdisplay/FrontDisplay.js",["126"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { auth } from \"../../firebase/firebase\";\nimport { IconButton, Button, makeStyles } from \"@material-ui/core\";\nimport \"./frontdisplay.css\";\nconst FrontDisplay = ({ history }) => {\n  const useStyles = makeStyles(() => ({\n    buttonSignOut: {\n      marginTop: \"20px\",\n      fontFamily: \"sans-serif\",\n      borderColor: \"#028c6a\",\n      color: \"white\",\n      backgroundColor: \"#028c6a\",\n      alignItems: \"center\",\n      \"&:hover\": {\n        color: \"#028c6a\",\n        backgroundColor: \"#FFF\",\n      },\n    },\n  }));\n  const classes = useStyles();\n\n  return (\n    <div className=\"span\">\n      <span>\n        Welcome to Reside! A free and new platform to help you manage your\n        customers and properties.\n        <br />\n        Add events to your Google-Calendar with few simple clicks.\n        <br />\n        To explore the demo, register, or use our test user: <br />\n        User: <strong>bradpitt@gmail.com</strong>\n        <br />\n        Password: <strong>123456</strong>\n      </span>\n      <div\n        className={`menu-item`}\n        onClick={() => {\n          auth.signInWithEmailAndPassword(\"bradpitt@gmail.com\", \"123456\");\n        }}\n      >\n        <div>\n          <Button variant=\"outlined\" className={classes.buttonSignOut}>\n            DEMO SIGN IN\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(FrontDisplay);\n","/Users/alexgordon/Desktop/reside/src/pages/about/About.js",["127","128","129","130"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 345,\n    marginTop: 50,\n  },\n  media: {\n    margin: \"0px auto\",\n    width: \"100%\",\n    height: 320,\n    position: \"relative\",\n    zIndex: 1000,\n    borderBottom: \"10px solid var(--app-color)\",\n  },\n  footer: {\n    textAlign: \"center\",\n  },\n});\n\nconst About = () => {\n  const classes = useStyles();\n  return (\n    <Grid\n      container\n      spacing={0}\n      direction=\"column\"\n      alignItems=\"center\"\n      justify=\"center\"\n    >\n      <Card className={classes.root} align=\"center\">\n        <CardMedia\n          component=\"img\"\n          className={classes.media}\n          alt=\"Contemplative Reptile\"\n          height=\"140\"\n          src=\"https://avatars3.githubusercontent.com/u/62938794?s=460&u=3aae313e7026179f2649783c6deeebe6675136f6&v=4\"\n          title=\"Contemplative Reptile\"\n        />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            Alexander Gordon\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            Full-Stack Developer with big passion to learn new tools and\n            technology!\n            <p>React.js, Node.js, Next.js, FireBase, Python</p>\n          </Typography>\n        </CardContent>\n        <Grid\n          container\n          spacing={0}\n          direction=\"column\"\n          alignItems=\"center\"\n          justify=\"center\"\n        >\n          <CardActions className={classes.footer}>\n            <a\n              href=\"https://www.linkedin.com/in/alexgordontlv/\"\n              target=\"_blank\"\n            >\n              <LinkedInIcon />\n            </a>\n            <a href=\"https://www.github.com/alexgordontlv/\" target=\"_blank\">\n              <GitHubIcon />\n            </a>\n          </CardActions>\n        </Grid>\n      </Card>\n    </Grid>\n  );\n};\n\nexport default About;\n","/Users/alexgordon/Desktop/reside/src/components/display/Display2.js",["131"],"import React, { useEffect } from \"react\";\nimport {\n  List as MUIList,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Slide,\n  Grid,\n} from \"@material-ui/core\";\nimport FormDialog from \"../formdialog/FormDialog\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Delete } from \"@material-ui/icons\";\nimport TimePicker from \"../timepicker/TimePicker\";\nimport useStyles from \"./listStyles\";\nimport { GiElevator } from \"react-icons/gi\";\nimport { AiFillCar } from \"react-icons/ai\";\nimport { deleteDataFromFireBase } from \"../../firebase/firebase\";\nimport { deleteData } from \"../../redux/user/user.actions\";\nimport { useSnackbar } from \"notistack\";\n\nfunction Display2({ dataToShow, searchValue }) {\n  const [state, setState] = React.useState(null);\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [dataToShow]);\n\n  const handleDelete = (rowData, rowIndex) => {\n    deleteDataFromFireBase(currentUser, rowData.id, dataToShow);\n    dispatch(deleteData(rowIndex, dataToShow));\n    enqueueSnackbar(`${rowData.name} was succesfully deleted!`);\n  };\n\n  const dataRows = currentUser\n    ? dataToShow === \"customers\"\n      ? currentUser.customers.filter((customer) =>\n          customer.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : currentUser.properties.filter((property) =>\n          property.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n    : [];\n\n  return (\n    <div>\n      <MUIList\n        dense={false}\n        style={{ maxWidth: \"100%\" }}\n        width=\"100%\"\n        className={classes.list}\n      >\n        {dataRows.map((row, index) => (\n          <Slide direction=\"down\" in mountOnEnter unmountOnExit key={row.id}>\n            <ListItem\n              alignItems=\"center\"\n              className={row.parking ? classes.rowRed : classes.rowGreen}\n            >\n              <ListItemAvatar>\n                <div>\n                  {row.elevator && <GiElevator className={classes.icon} />}\n                  {row.parking && <AiFillCar className={classes.icon} />}\n                </div>\n              </ListItemAvatar>\n              <Grid\n                className={classes.grid}\n                container\n                alignItems=\"center\"\n                justify=\"center\"\n              >\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Name\" : \"Address\"}\n                    secondary={\n                      row.name.length > 12\n                        ? row.name.slice(0, 10) + \"...\"\n                        : row.name\n                    }\n                  />\n                </Grid>\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Phone\" : \"Contact\"}\n                    secondary={row.phone || \"- - - - - -\"}\n                  />\n                </Grid>\n                <Grid item xs={4} sm={4}>\n                  <ListItemText\n                    primary={dataToShow === \"customers\" ? \"Budget\" : \"Price\"}\n                    secondary={row.budget}\n                  />\n                </Grid>\n              </Grid>\n              <ListItemSecondaryAction>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  {dataToShow === \"customers\" ? (\n                    <TimePicker rowData={row} />\n                  ) : (\n                    <div></div>\n                  )}\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"edit\">\n                  <FormDialog\n                    dataToShow={dataToShow}\n                    rowData={row}\n                    rowIndex={index}\n                    style={{ alignItems: \"center\" }}\n                  />\n                </IconButton>\n                <IconButton edge=\"end\" aria-label=\"delete\">\n                  <Delete\n                    onClick={() => {\n                      handleDelete(row, index);\n                    }}\n                    style={{ color: \"black\" }}\n                  />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          </Slide>\n        ))}\n      </MUIList>\n    </div>\n  );\n}\n\nexport default Display2;\n","/Users/alexgordon/Desktop/reside/src/components/display/Display.js",["132"],"import React, { useState, useEffect } from \"react\";\nimport { DataGrid, RowsProp, ColDef } from \"@material-ui/data-grid\";\nimport \"./display.css\";\nimport FormDialog from \"../formdialog/FormDialog\";\nimport { connect } from \"react-redux\";\nimport TimePicker from \"../timepicker/TimePicker\";\nimport { SnackbarProvider } from \"notistack\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nfunction Display({ dataToShow, currentUser, searchValue }) {\n  const [state, setState] = React.useState(null);\n  const [index, setIndex] = React.useState(null);\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [dataToShow]);\n\n  let name,\n    budget,\n    phone = null;\n  if (dataToShow === \"customers\") {\n    name = \"Name\";\n    budget = \"Budget\";\n    phone = \"Phone Number\";\n  } else {\n    name = \"Address\";\n    budget = \"Price\";\n    phone = \"Contact\";\n  }\n\n  const rows: RowsProp = currentUser\n    ? dataToShow === \"customers\"\n      ? currentUser.customers.filter((customer) =>\n          customer.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n      : currentUser.properties.filter((property) =>\n          property.name.toLowerCase().includes(searchValue.toLowerCase())\n        )\n    : [];\n\n  const columns: ColDef[] = [\n    { field: \"name\", headerName: `${name}`, width: 120 },\n    { field: \"budget\", headerName: `${budget}`, width: 120 },\n    { field: \"phone\", headerName: `${phone}`, width: 130 },\n    { field: \"rooms\", headerName: \"Rooms\", width: 80 },\n    { field: \"floor\", headerName: \"Floor\", width: 70 },\n    { field: \"elevator\", headerName: \"Elevator\", width: 80 },\n    { field: \"parking\", headerName: \"Parking\", width: 70 },\n  ];\n\n  const handleRowClick = (event) => {\n    setIndex(event.rowIndex);\n    setState(rows[event.rowIndex]);\n  };\n\n  return (\n    <SnackbarProvider maxSnack={3}>\n      <div className=\"display\">\n        <div className=\"icon\">\n          <FormDialog dataToShow={dataToShow} rowData={null} />\n\n          <div className=\"container\">\n            {state ? (\n              <FormDialog\n                dataToShow={dataToShow}\n                rowData={state}\n                rowIndex={index}\n                className=\"button\"\n              />\n            ) : null}\n            {state ? <TimePicker rowData={state} className=\"button\" /> : null}\n          </div>\n        </div>\n        <div style={{ height: 500, width: \"100%\" }}>\n          {rows.length || !currentUser ? (\n            <DataGrid\n              rows={rows}\n              columns={columns}\n              onRowClick={(params) => handleRowClick(params)}\n              disableMultipleSelection={true}\n            />\n          ) : (\n            <div className=\"proggress_container\">\n              <CircularProgress className=\"proggress\" />\n            </div>\n          )}\n        </div>\n      </div>\n    </SnackbarProvider>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  currentUser: state.user.currentUser,\n});\n\nexport default connect(mapStateToProps)(Display);\n","/Users/alexgordon/Desktop/reside/src/components/map/Map.js",["133","134","135","136","137","138","139","140","141"],"/Users/alexgordon/Desktop/reside/src/sidebar/SideBarOption.js",[],"/Users/alexgordon/Desktop/reside/src/sidebar/Search.js",[],"/Users/alexgordon/Desktop/reside/src/components/display/listStyles.js",[],"/Users/alexgordon/Desktop/reside/src/components/formdialog/FormDialog.js",["142","143","144","145","146"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { IconButton } from \"@material-ui/core\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport \"./formdialog.css\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport { Box, makeStyles } from \"@material-ui/core\";\n\nimport {\n  addCustomer,\n  addProperty,\n  deleteData,\n  updateData,\n} from \"../../redux/user/user.actions\";\nimport {\n  addDataToFireStore,\n  deleteDataFromFireBase,\n  updateDataFromFireBase,\n} from \"../../firebase/firebase\";\nimport { useSnackbar } from \"notistack\";\n\nfunction FormDialog({ dataToShow, rowData, rowIndex }) {\n  const useStyles = makeStyles(() => ({\n    button: {\n      borderColor: \"#028c6a\",\n      color: \"#028c6a\",\n      backgroundColor: \"white\",\n      \"&:hover\": {\n        color: \"white\",\n        backgroundColor: \"028c6a\",\n      },\n    },\n    buttonSignIn: {\n      borderColor: \"#028c6a\",\n      color: \"#028c6a\",\n    },\n  }));\n  const classes = useStyles();\n  const currentUser = useSelector((state) => state.user.currentUser);\n  const dispatch = useDispatch();\n  let name,\n    budget,\n    phone,\n    dataName = null;\n  if (dataToShow === \"customers\") {\n    dataName = \"Customer\";\n    name = \"Name\";\n    budget = \"Budget\";\n    phone = \"Phone Number\";\n  } else {\n    dataName = \"Property\";\n    name = \"Address\";\n    budget = \"Price\";\n    phone = \"Contact\";\n  }\n  let INITIAL_STATE = {\n    id: \"\",\n    name: \"\",\n    budget: \"\",\n    phone: \"\",\n    rooms: \"\",\n    floor: \"\",\n    elevator: false,\n    parking: false,\n  };\n  const [state, setState] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const { enqueueSnackbar } = useSnackbar();\n  useEffect(() => {\n    setState(rowData ? { ...rowData } : INITIAL_STATE);\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [rowData]);\n  const handleChange = (event) => {\n    setState({ ...state, [event.target.name]: event.target.value });\n  };\n  const handleCecked = (event) => {\n    setState({ ...state, [event.target.name]: event.target.checked });\n  };\n\n  const handleUpdate = (event) => {\n    event.preventDefault();\n    console.log(rowIndex);\n    updateDataFromFireBase(currentUser, state, dataToShow);\n    dispatch(updateData(rowIndex, dataToShow, state));\n\n    enqueueSnackbar(`${state.name} was succesfully updated`);\n    setOpen(false);\n  };\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    if (currentUser) {\n      addDataToFireStore(currentUser, state, dataToShow).then((data) => {\n        data.onSnapshot((snapShot) => {\n          if (dataToShow === \"customers\") {\n            dispatch(addCustomer(snapShot.data()));\n          } else {\n            dispatch(addProperty(snapShot.data()));\n          }\n          enqueueSnackbar(\n            `${state.name} was succesfully added to the database`,\n            \"success\"\n          );\n          setState(INITIAL_STATE);\n        });\n      });\n    }\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Box width=\"100%\">\n      <div>\n        {!rowData ? (\n          <Box\n            display=\"flex\"\n            height={80}\n            alignItems=\"center\"\n            justifyContent=\"center\"\n          >\n            <Button\n              variant=\"outlined\"\n              className={classes.button}\n              onClick={handleClickOpen}\n              textAlign=\"center\"\n              justify=\"center\"\n            >\n              <AddIcon fontSize=\"large\" />{\" \"}\n              {`Add ${dataToShow === \"customers\" ? \"Customer\" : \"Property\"}`}\n            </Button>\n          </Box>\n        ) : (\n          <EditIcon onClick={handleClickOpen} style={{ color: \"black\" }} />\n        )}\n\n        <Dialog\n          open={open}\n          onClose={handleClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">\n            {rowData ? \"Update\" : \"Add\"} {`${dataName}`}\n          </DialogTitle>\n          <DialogContent>\n            <div className=\"container\">\n              <div className=\"left\">\n                <TextField\n                  autoFocus\n                  margin=\"dense\"\n                  name=\"name\"\n                  label={name}\n                  type=\"text\"\n                  value={state.name}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"budget\"\n                  label={budget}\n                  type=\"text\"\n                  value={state.budget}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"rooms\"\n                  label=\"Rooms\"\n                  type=\"number\"\n                  value={state.rooms}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n              </div>\n              <div className=\"right\">\n                <TextField\n                  margin=\"dense\"\n                  name=\"phone\"\n                  label={phone}\n                  type=\"text\"\n                  value={state.phone}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <TextField\n                  margin=\"dense\"\n                  name=\"floor\"\n                  label=\"Floor\"\n                  type=\"number\"\n                  value={state.floor}\n                  onChange={handleChange}\n                  fullWidth\n                  className=\"field\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.elevator}\n                      onChange={handleCecked}\n                      name=\"elevator\"\n                    />\n                  }\n                  label=\"Elevator\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={state.parking}\n                      onChange={handleCecked}\n                      name=\"parking\"\n                    />\n                  }\n                  label=\"Parking\"\n                />\n              </div>\n            </div>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} variant=\"outlined\" className=\"button\">\n              Cancel\n            </Button>\n            {rowData ? (\n              <div className=\"actions\">\n                <Button\n                  onClick={handleUpdate}\n                  variant=\"outlined\"\n                  className=\"button\"\n                >\n                  Update {`${dataName}`}\n                </Button>\n              </div>\n            ) : (\n              <Button\n                onClick={handleSubmit}\n                variant=\"outlined\"\n                className=\"button\"\n              >\n                Add {`${dataName}`}\n              </Button>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    </Box>\n  );\n}\n\nexport default FormDialog;\n","/Users/alexgordon/Desktop/reside/src/components/timepicker/TimePicker.js",["147"],"import React, { useEffect, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { addCalendarEvent } from \"../calendar/Calendar\";\nimport { createStyles, makeStyles, Theme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport EventIcon from \"@material-ui/icons/Event\";\n\nfunction TimePicker({ rowData }) {\n  const useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      container: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n      },\n    })\n  );\n  const classes = useStyles();\n  const [state, setState] = React.useState(new Date());\n  const [address, setAddress] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n\n  useEffect(() => {\n    return function cleanup() {\n      setState(\"\");\n    };\n  }, [rowData]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    console.log(state);\n    addCalendarEvent(state, address, rowData.name);\n    setState(\"\");\n    setAddress(\"\");\n    setOpen(false);\n  };\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <EventIcon style={{ color: \"black\" }} onClick={handleClickOpen} />\n\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        <DialogTitle id=\"form-dialog-title\">\n          Add Event To {rowData ? rowData.name : \"Customer\"}\n        </DialogTitle>\n        <DialogContent>\n          <div className=\"container\">\n            <form className={classes.container} noValidate>\n              <TextField\n                id=\"datetime-local\"\n                label=\"Next appointment\"\n                type=\"datetime-local\"\n                value={state}\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={(event) => {\n                  setState(event.target.value);\n                }}\n              />\n            </form>\n          </div>\n          <TextField\n            margin=\"dense\"\n            name=\"address\"\n            label=\"Where?\"\n            type=\"text\"\n            value={address}\n            onChange={(event) => {\n              setAddress(event.target.value);\n            }}\n            fullWidth\n            className=\"field\"\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} variant=\"outlined\">\n            Cancel\n          </Button>\n          <Button onClick={handleSubmit} variant=\"outlined\">\n            Add Event\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default TimePicker;\n","/Users/alexgordon/Desktop/reside/src/components/calendar/Calendar.js",["148"],"\n  let gapi = window.gapi\n  /* \n    Update with your own Client Id and Api key \n  */\n  let CLIENT_ID = process.env.REACT_APP_CLIENT_ID\n  let API_KEY = process.env.REACT_APP_CALENDAR_API_KEY\n  let DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest\"]\n  let SCOPES = \"https://www.googleapis.com/auth/calendar.events\"\n\n \n\n\n  export const addCalendarEvent = (startTime,address,clientName) => {\n  \n    gapi.load('client:auth2', () => {\n      gapi.client.init({\n        apiKey: API_KEY,\n        clientId: CLIENT_ID,\n        discoveryDocs: DISCOVERY_DOCS,\n        scope: SCOPES,\n      })\n\n      gapi.client.load('calendar', 'v3')\n      let timeString = startTime;\n      let timeZone = \"Asia/Jerusalem\";\n      let duration = '00:30:00';\n    \n      let startDate = new Date(timeString);\n      let msDuration = (Number(duration.split(':')[0]) * 60 * 60 + Number(duration.split(':')[1]) * 60  + Number(duration.split(':')[2])) * 1000;\n      let endDate = new Date(startDate.getTime() + msDuration);\n      let isoStartDate = new Date(startDate.getTime()-new Date().getTimezoneOffset()*60*1000).toISOString().split(\".\")[0];\n      let isoEndDate = new Date(endDate.getTime()-(new Date().getTimezoneOffset())*60*1000).toISOString().split(\".\")[0];\n\n\n      gapi.auth2.getAuthInstance().signIn()\n      .then(() => {\n        console.log(isoStartDate)\n        console.log(isoEndDate)\n        let event = {\n          'summary': clientName,\n          'location': address,\n          'start': {\n            'dateTime': isoStartDate,\n            'timeZone': timeZone\n          },\n          'end': {\n            'dateTime': isoEndDate,\n            'timeZone': timeZone\n          },\n          'recurrence': [\n            'RRULE:FREQ=DAILY;COUNT=1'\n          ],\n          'reminders': {\n            'useDefault': false,\n            'overrides': [\n              {'method': 'popup', 'minutes': 20}\n            ]\n          }\n        }\n         gapi.client.calendar.events.list({\n          'calendarId': 'primary',\n          'timeMin': (new Date()).toISOString(),\n          'showDeleted': false,\n          'singleEvents': true,\n          'maxResults': 10,\n          'orderBy': 'startTime'\n        }).then(response => {\n          const events = response.result.items\n          //console.log('EVENTS: ', events)\n        })\n        \n        \n        let request = gapi.client.calendar.events.insert({\n          'calendarId': 'primary',\n          'resource': event,\n        })\n\n        request.execute(event => {\n          console.log(event)\n          window.open(event.htmlLink)\n        })\n        \n\n      })\n    })\n  }\n\n  \n",{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":45,"column":6,"nodeType":"155","endLine":45,"endColumn":8,"suggestions":"156"},{"ruleId":"157","severity":1,"message":"158","line":1,"column":22,"nodeType":"159","messageId":"160","endLine":1,"endColumn":37},{"ruleId":"157","severity":1,"message":"161","line":3,"column":8,"nodeType":"159","messageId":"160","endLine":3,"endColumn":15},{"ruleId":"157","severity":1,"message":"162","line":4,"column":10,"nodeType":"159","messageId":"160","endLine":4,"endColumn":20},{"ruleId":"157","severity":1,"message":"163","line":4,"column":8,"nodeType":"159","messageId":"160","endLine":4,"endColumn":22},{"ruleId":"157","severity":1,"message":"164","line":8,"column":8,"nodeType":"159","messageId":"160","endLine":8,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":68,"column":13,"nodeType":"167","endLine":71,"endColumn":14},{"ruleId":"165","severity":1,"message":"166","line":74,"column":13,"nodeType":"167","endLine":74,"endColumn":77},{"ruleId":"157","severity":1,"message":"168","line":24,"column":10,"nodeType":"159","messageId":"160","endLine":24,"endColumn":15},{"ruleId":"157","severity":1,"message":"169","line":1,"column":17,"nodeType":"159","messageId":"160","endLine":1,"endColumn":25},{"ruleId":"157","severity":1,"message":"170","line":2,"column":8,"nodeType":"159","messageId":"160","endLine":2,"endColumn":16},{"ruleId":"157","severity":1,"message":"171","line":4,"column":3,"nodeType":"159","messageId":"160","endLine":4,"endColumn":12},{"ruleId":"157","severity":1,"message":"172","line":6,"column":3,"nodeType":"159","messageId":"160","endLine":6,"endColumn":9},{"ruleId":"157","severity":1,"message":"173","line":7,"column":3,"nodeType":"159","messageId":"160","endLine":7,"endColumn":13},{"ruleId":"157","severity":1,"message":"174","line":11,"column":10,"nodeType":"159","messageId":"160","endLine":11,"endColumn":18},{"ruleId":"157","severity":1,"message":"175","line":11,"column":20,"nodeType":"159","messageId":"160","endLine":11,"endColumn":31},{"ruleId":"157","severity":1,"message":"176","line":17,"column":11,"nodeType":"159","messageId":"160","endLine":17,"endColumn":19},{"ruleId":"157","severity":1,"message":"177","line":17,"column":21,"nodeType":"159","messageId":"160","endLine":17,"endColumn":30},{"ruleId":"157","severity":1,"message":"178","line":22,"column":9,"nodeType":"159","messageId":"160","endLine":22,"endColumn":22},{"ruleId":"157","severity":1,"message":"169","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"162","line":8,"column":10,"nodeType":"159","messageId":"160","endLine":8,"endColumn":20},{"ruleId":"157","severity":1,"message":"179","line":20,"column":3,"nodeType":"159","messageId":"160","endLine":20,"endColumn":13},{"ruleId":"157","severity":1,"message":"180","line":25,"column":3,"nodeType":"159","messageId":"160","endLine":25,"endColumn":25},{"ruleId":"153","severity":1,"message":"181","line":82,"column":6,"nodeType":"155","endLine":82,"endColumn":15,"suggestions":"182"},{"ruleId":"157","severity":1,"message":"169","line":1,"column":28,"nodeType":"159","messageId":"160","endLine":1,"endColumn":36},{"ruleId":"157","severity":1,"message":"183","line":69,"column":17,"nodeType":"159","messageId":"160","endLine":69,"endColumn":23},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["186"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'Display' is defined but never used.","'IconButton' is defined but never used.","'CardActionArea' is defined but never used.","'Button' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","'state' is assigned a value but never used.","'useState' is defined but never used.","'RoomIcon' is defined but never used.","'GoogleMap' is defined but never used.","'Marker' is defined but never used.","'InfoWindow' is defined but never used.","'viewport' is assigned a value but never used.","'setViewPort' is assigned a value but never used.","'isLoaded' is assigned a value but never used.","'loadError' is assigned a value but never used.","'propertyArray' is assigned a value but never used.","'deleteData' is defined but never used.","'deleteDataFromFireBase' is defined but never used.","React Hook useEffect has a missing dependency: 'INITIAL_STATE'. Either include it or remove the dependency array.",["187"],"'events' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"188","fix":"189"},{"desc":"190","fix":"191"},"Update the dependencies array to be: [dispatch]",{"range":"192","text":"193"},"Update the dependencies array to be: [INITIAL_STATE, rowData]",{"range":"194","text":"195"},[1554,1556],"[dispatch]",[2292,2301],"[INITIAL_STATE, rowData]"]